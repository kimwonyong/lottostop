{"version":3,"sources":["bootstrap.js","contexts/PageContext.js","components/Panorama.jsx","components/Numbers.jsx","components/ResultModal.jsx","components/GenerateButton.jsx","components/BottomAppBar.jsx","pages/Home.jsx","apis/LocalApi.js","pages/Search.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["install","PageContext","createContext","page","setPage","useStyles","makeStyles","root","position","width","height","panorama","Panorama","classes","_useState","useState","_useState2","Object","slicedToArray","roadview","setRoadview","useEffect","roadviewContainer","document","getElementById","kakao","maps","Roadview","panoId","window","setPanoId","_ref","x","y","roadviewClient","RoadviewClient","LatLng","getNearestPanoId","react_default","a","createElement","className","id","margin","fontSize","marginBottom","backgroundColor","_ref2","number","getNumberBackgroundColor","Numbers","_ref3","core_index_es","ResultModal","open","lottoNumbers","handleClose","aria-labelledby","onClose","container","justify","alignItems","map","numbers","key","components_Numbers","variant","color","fullWidth","onClick","left","right","top","GenerateButton","setLottoNumbers","_useState3","_useState4","setOpen","Fragment","Fab_default","concat","aria-label","generatedLottoNumbers","toConsumableArray","Array","sampleSize","range","sort","b","Album_default","components_ResultModal","positionFixed","bottom","BottomAppBar","pageContext","useContext","AppBar_default","components_GenerateButton","BottomNavigation_default","showLabels","BottomNavigationAction_default","label","icon","Search_default","disabled","ListAlt_default","Home","components_Panorama","components_BottomAppBar","LocalApi","asyncToGenerator","regenerator_default","mark","_callee","query","_ref$page","local","wrap","_context","prev","next","documents","axios","method","url","params","headers","Authorization","then","res","data","sent","abrupt","stop","_x","apply","this","arguments","rootPaper","zIndex","inputPaper","padding","display","input","marginLeft","flex","iconButton","recentKeyword","Search","_useContext","localList","setLocalList","isSearchPage","hasLocalList","length","handleChange","debouncedHandleChange","debounce","goHomePage","handleLocalItemClick","Paper_default","square","IconButton_default","KeyboardBackspace_default","InputBase_default","placeholder","inputProps","onChange","e","target","value","autoFocus","component","item","button","primary","place_name","secondary","road_address_name","address_name","elevation","align","App","Provider","pages_Home","pages_Search","Boolean","location","hostname","match","theme","createMuiTheme","typography","useNextVariants","ReactDOM","render","index_es","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.efb7f1a3.chunk.js","sourcesContent":["import 'normalize.css';\nimport 'animate.css';\nimport { install } from '@material-ui/styles';\n\ninstall();\n","import { createContext } from 'react';\n\nexport const initialState = {\n  page: 'HOME',\n  setPage: () => {},\n};\n\nexport const PageContext = createContext(initialState);\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'fixed',\n    width: '100%',\n    height: '100%',\n  },\n  panorama: {\n    width: '100%',\n    height: 'calc(100% - 56px)', // 카카오 로고 노출을 위해, 하단 영역 height 빼주기\n  },\n});\n\nconst Panorama = () => {\n  const classes = useStyles();\n  const [roadview, setRoadview] = useState(null);\n\n  useEffect(() => {\n    /* eslint-disable */\n    const roadviewContainer = document.getElementById('panorama'); //로드뷰를 표시할 div\n    const roadview = new kakao.maps.Roadview(roadviewContainer, {\n      panoId: '23921009',\n    }); //로드뷰 객체\n    setRoadview(roadview);\n    /* eslint-enable */\n  }, []);\n\n  window.setPanoId = ({ x, y }) => {\n    /* eslint-disable */\n    const roadviewClient = new kakao.maps.RoadviewClient(); // 좌표로부터 로드뷰 파노ID를 가져올 로드뷰 helper객체\n    const position = new kakao.maps.LatLng(y, x);\n\n    // 특정 위치의 좌표와 가까운 로드뷰의 panoId를 추출하여 로드뷰를 띄운다.\n    roadviewClient.getNearestPanoId(position, 50, panoId => {\n      roadview.setPanoId(panoId, position); // panoId와 중심좌표를 통해 로드뷰 실행\n    });\n    /* eslint-enable */\n  };\n\n  return (\n    <div className={classes.root}>\n      <div id=\"panorama\" className={classes.panorama} />\n    </div>\n  );\n};\n\nexport default Panorama;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Avatar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\n\nconst getNumberBackgroundColor = ({ number }) => {\n  if (number <= 10) {\n    return '#fbc400';\n  }\n\n  if (number <= 20) {\n    return '#69c8f2';\n  }\n\n  if (number <= 30) {\n    return '#ff7272';\n  }\n\n  if (number <= 40) {\n    return '#aaa';\n  }\n\n  return '#b0d840';\n};\n\nconst useStyles = makeStyles({\n  root: {\n    margin: '1px',\n    width: '30px',\n    height: '30px',\n    fontSize: '1rem',\n    marginBottom: '20px',\n    backgroundColor: ({ number }) => getNumberBackgroundColor({ number }),\n  },\n});\n\nconst Numbers = ({ number }) => {\n  const classes = useStyles({ number });\n  return <Avatar className={classes.root}>{number}</Avatar>;\n};\n\nNumbers.propTypes = {\n  number: PropTypes.number.isRequired,\n};\n\nexport default Numbers;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Dialog, DialogTitle, Grid, Button, DialogContent, DialogActions,\n} from '@material-ui/core';\nimport Numbers from './Numbers';\n\nconst ResultModal = ({ open, lottoNumbers, handleClose }) => (\n  <Dialog aria-labelledby=\"result-modal-title\" open={open} onClose={handleClose}>\n    <DialogTitle id=\"result-modal-title\">\n      <Grid container justify=\"center\" alignItems=\"center\">\n        풍수지리 패턴 분석결과\n      </Grid>\n    </DialogTitle>\n\n    <DialogContent>\n      {lottoNumbers.map(numbers => (\n        <Grid key={numbers} container justify=\"center\" alignItems=\"center\">\n          {numbers.map(number => (\n            <Numbers key={number} number={number} />\n          ))}\n        </Grid>\n      ))}\n    </DialogContent>\n\n    <DialogActions>\n      <Button variant=\"contained\" color=\"primary\" fullWidth onClick={handleClose}>\n        닫기\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\n\nResultModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  lottoNumbers: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)).isRequired,\n  handleClose: PropTypes.func.isRequired,\n};\n\nexport default ResultModal;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AlbumIcon from '@material-ui/icons/Album';\nimport { sampleSize, range } from 'lodash';\nimport ResultModal from './ResultModal';\n\nconst generateLottoNumbers = () => sampleSize(range(1, 46), 6).sort((a, b) => a - b);\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'absolute',\n    margin: 'auto',\n    left: 0,\n    right: 0,\n    top: -29,\n  },\n});\n\nconst GenerateButton = () => {\n  const classes = useStyles();\n  const [lottoNumbers, setLottoNumbers] = useState([]);\n  const [open, setOpen] = useState(false);\n\n  const handleClick = () => {\n    const generatedLottoNumbers = [...Array(5)].map(() => generateLottoNumbers());\n    setLottoNumbers(generatedLottoNumbers);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Fab\n        color=\"primary\"\n        className={`${classes.root}`}\n        aria-label=\"Generate\"\n        onClick={handleClick}\n      >\n        <AlbumIcon className=\"animated infinite pulse\" fontSize=\"large\" />\n      </Fab>\n      <ResultModal open={open} lottoNumbers={lottoNumbers} handleClose={handleClose} />\n    </>\n  );\n};\n\nexport default GenerateButton;\n","import React, { useContext } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport { makeStyles } from '@material-ui/styles';\nimport GenerateButton from './GenerateButton';\nimport { PageContext } from '../contexts/PageContext';\n\nconst useStyles = makeStyles({\n  positionFixed: { top: 'auto', bottom: 0 },\n});\n\nconst BottomAppBar = () => {\n  const classes = useStyles();\n  const pageContext = useContext(PageContext);\n\n  return (\n    <AppBar position=\"fixed\" className={classes.positionFixed}>\n      <GenerateButton />\n      <BottomNavigation showLabels>\n        <BottomNavigationAction\n          label=\"장소검색\"\n          icon={<SearchIcon />}\n          onClick={() => pageContext.setPage('SEARCH')}\n        />\n        <BottomNavigationAction disabled />\n        <BottomNavigationAction label=\"이전내역\" icon={<ListAltIcon />} />\n      </BottomNavigation>\n    </AppBar>\n  );\n};\n\nexport default BottomAppBar;\n","import React from 'react';\n\nimport Panorama from '../components/Panorama';\nimport BottomAppBar from '../components/BottomAppBar';\n\nconst Home = () => (\n  <>\n    <Panorama />\n    <BottomAppBar />\n  </>\n);\n\nexport default Home;\n","import axios from 'axios';\n\nconst LocalApi = async ({ query, page = 1 }) => {\n  let local = {\n    documents: [],\n  };\n\n  if (query) {\n    local = await axios({\n      method: 'get',\n      url: 'https://dapi.kakao.com/v2/local/search/keyword.json',\n      params: {\n        query,\n        page,\n      },\n      headers: {\n        Authorization: 'KakaoAK 30d7a71beace9182140fae73eb808b90',\n      },\n    }).then(res => res.data);\n  }\n\n  return local;\n};\n\nexport default LocalApi;\n","import React, { useContext, useState } from 'react';\nimport { debounce } from 'lodash';\n\nimport { makeStyles } from '@material-ui/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\nimport SearchIcon from '@material-ui/icons/Search';\nimport {\n  List, ListItemText, ListItem, Typography,\n} from '@material-ui/core';\nimport { PageContext } from '../contexts/PageContext';\nimport LocalApi from '../apis/LocalApi';\n\nconst useStyles = makeStyles({\n  rootPaper: {\n    position: 'fixed',\n    width: '100%',\n    height: '100%',\n    zIndex: 2000,\n  },\n  inputPaper: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  recentKeyword: {\n    padding: '50px',\n  },\n});\n\nconst Search = () => {\n  const classes = useStyles();\n  const { page, setPage } = useContext(PageContext);\n  const [localList, setLocalList] = useState([]);\n\n  const isSearchPage = page === 'SEARCH';\n\n  const hasLocalList = localList.length > 0;\n\n  const handleChange = async (query) => {\n    const { documents } = await LocalApi({ query });\n    setLocalList(documents);\n  };\n\n  const debouncedHandleChange = debounce(handleChange, 300);\n\n  const goHomePage = () => setPage('HOME');\n\n  const handleBackButtonClick = () => {\n    goHomePage();\n  };\n\n  const handleLocalItemClick = ({ x, y }) => () => {\n    window.setPanoId({ x, y });\n    goHomePage();\n  };\n\n  return (\n    isSearchPage && (\n      <Paper className={classes.rootPaper}>\n        <Paper className={classes.inputPaper} square>\n          <IconButton\n            className={classes.iconButton}\n            aria-label=\"Menu\"\n            onClick={handleBackButtonClick}\n          >\n            <KeyboardBackspaceIcon />\n          </IconButton>\n          <InputBase\n            className={classes.input}\n            placeholder=\"장소를 입력해주세요.\"\n            inputProps={{ 'aria-label': '장소를 입력해주세요.' }}\n            onChange={e => debouncedHandleChange(e.target.value)}\n            autoFocus\n          />\n          <IconButton className={classes.iconButton} aria-label=\"Search\">\n            <SearchIcon />\n          </IconButton>\n        </Paper>\n\n        {hasLocalList ? (\n          <List component=\"nav\" aria-label=\"Secondary mailbox folders\">\n            {localList.map(item => (\n              <ListItem\n                key={item.id}\n                button\n                onClick={handleLocalItemClick({ x: item.x, y: item.y })}\n              >\n                <ListItemText\n                  primary={item.place_name}\n                  secondary={item.road_address_name || item.address_name}\n                />\n              </ListItem>\n            ))}\n          </List>\n        ) : (\n          <Paper className={classes.recentKeyword} elevation={1} square>\n            <Typography variant=\"subtitle1\" align=\"center\">\n              최근 검색어 내역이 없습니다.\n            </Typography>\n            <Typography variant=\"subtitle2\" align=\"center\">\n              설정이 초기화된다면 도움말을 확인해주세요.\n            </Typography>\n          </Paper>\n        )}\n      </Paper>\n    )\n  );\n};\n\nexport default Search;\n","import React, { useState } from 'react';\nimport { PageContext } from './contexts/PageContext';\nimport Home from './pages/Home';\nimport Search from './pages/Search';\n\nconst App = () => {\n  const [page, setPage] = useState('HOME');\n\n  return (\n    <PageContext.Provider\n      value={{\n        page,\n        setPage,\n      }}\n    >\n      <Home />\n      <Search />\n    </PageContext.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}