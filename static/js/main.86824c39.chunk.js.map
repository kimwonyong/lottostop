{"version":3,"sources":["bootstrap.js","contexts/PageContext.js","components/Panorama.jsx","components/Numbers.jsx","components/ResultModal.jsx","components/GenerateButton.jsx","components/BottomAppBar.jsx","pages/Home.jsx","apis/LocalApi.js","pages/Search.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["install","PageContext","createContext","page","setPage","useStyles","makeStyles","root","position","width","height","panorama","isLocalhost","Boolean","window","location","hostname","match","Panorama","classes","useEffect","paranomaStyle","document","getElementById","style","backgroundColor","roadviewContainer","kakao","maps","Roadview","panoId","panoX","panoY","pan","tilt","zoom","react_default","a","createElement","className","id","margin","fontSize","marginBottom","_ref2","_ref","number","getNumberBackgroundColor","Numbers","_ref3","core_index_es","ResultModal","open","lottoNumbers","handleClose","aria-labelledby","onClose","container","justify","alignItems","map","numbers","key","components_Numbers","variant","color","fullWidth","onClick","left","right","top","GenerateButton","_useState","useState","_useState2","Object","slicedToArray","setLottoNumbers","_useState3","_useState4","setOpen","Fragment","Fab_default","concat","aria-label","generatedLottoNumbers","toConsumableArray","Array","sampleSize","range","sort","b","Album_default","components_ResultModal","positionFixed","bottom","BottomAppBar","pageContext","useContext","AppBar_default","components_GenerateButton","BottomNavigation_default","showLabels","BottomNavigationAction_default","label","icon","Search_default","disabled","ListAlt_default","Home","components_Panorama","components_BottomAppBar","LocalApi","asyncToGenerator","regenerator_default","mark","_callee","query","_ref$page","local","wrap","_context","prev","next","documents","axios","method","url","params","headers","Authorization","then","res","data","sent","abrupt","stop","_x","apply","this","arguments","padding","display","input","marginLeft","flex","iconButton","recentKeyword","Search","list","setList","handleChange","e","target","value","Paper_default","square","IconButton_default","KeyboardBackspace_default","InputBase_default","placeholder","inputProps","onChange","length","component","item","button","primary","place_name","elevation","align","App","Provider","pages_Home","pages_Search","theme","createMuiTheme","typography","useNextVariants","ReactDOM","render","index_es","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.86824c39.chunk.js","sourcesContent":["import 'normalize.css';\nimport 'animate.css';\nimport { install } from '@material-ui/styles';\n\ninstall();\n","import { createContext } from 'react';\n\nexport const initialState = {\n  page: 'HOME',\n  setPage: () => {},\n};\n\nexport const PageContext = createContext(initialState);\n","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'fixed',\n    width: '100%',\n    height: '100%',\n  },\n  panorama: {\n    width: '100%',\n    height: '100%', // TODO: 카카오 로고 노출을 위해, 하단 영역 height 빼주기\n  },\n});\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nconst Panorama = () => {\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (isLocalhost) {\n      const paranomaStyle = document.getElementById('panorama').style;\n      paranomaStyle.backgroundColor = 'grey';\n      paranomaStyle.width = '100%';\n      paranomaStyle.height = '100%';\n      paranomaStyle.position = 'fixed';\n    } else {\n      /* eslint-disable */\n      const roadviewContainer = document.getElementById('panorama');\n      //로드뷰 객체를 생성한다\n      const roadview = new kakao.maps.Roadview(roadviewContainer, {\n        panoId: 1050215190, // 로드뷰 시작 지역의 고유 아이디 값\n        panoX: 126.97837, // panoId가 유효하지 않을 경우 지도좌표를 기반으로 데이터를 요청할 수평 좌표값\n        panoY: 37.56613, // panoId가 유효하지 않을 경우 지도좌표를 기반으로 데이터를 요청할 수직 좌표값\n        pan: 68, // 로드뷰 처음 실행시에 바라봐야 할 수평 각\n        tilt: 1, // 로드뷰 처음 실행시에 바라봐야 할 수직 각\n        zoom: -1, // 로드뷰 줌 초기값\n      });\n      /* eslint-enable */\n    }\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <div id=\"panorama\" className={classes.panorama} />\n    </div>\n  );\n};\n\nexport default Panorama;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Avatar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\n\nconst getNumberBackgroundColor = ({ number }) => {\n  if (number <= 10) {\n    return '#fbc400';\n  }\n\n  if (number <= 20) {\n    return '#69c8f2';\n  }\n\n  if (number <= 30) {\n    return '#ff7272';\n  }\n\n  if (number <= 40) {\n    return '#aaa';\n  }\n\n  return '#b0d840';\n};\n\nconst useStyles = makeStyles({\n  root: {\n    margin: '1px',\n    width: '30px',\n    height: '30px',\n    fontSize: '1rem',\n    marginBottom: '20px',\n    backgroundColor: ({ number }) => getNumberBackgroundColor({ number }),\n  },\n});\n\nconst Numbers = ({ number }) => {\n  const classes = useStyles({ number });\n  return <Avatar className={classes.root}>{number}</Avatar>;\n};\n\nNumbers.propTypes = {\n  number: PropTypes.number.isRequired,\n};\n\nexport default Numbers;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Dialog, DialogTitle, Grid, Button, DialogContent, DialogActions,\n} from '@material-ui/core';\nimport Numbers from './Numbers';\n\nconst ResultModal = ({ open, lottoNumbers, handleClose }) => (\n  <Dialog aria-labelledby=\"result-modal-title\" open={open} onClose={handleClose}>\n    <DialogTitle id=\"result-modal-title\">\n      <Grid container justify=\"center\" alignItems=\"center\">\n        풍수지리 패턴 분석결과\n      </Grid>\n    </DialogTitle>\n\n    <DialogContent>\n      {lottoNumbers.map(numbers => (\n        <Grid key={numbers} container justify=\"center\" alignItems=\"center\">\n          {numbers.map(number => (\n            <Numbers key={number} number={number} />\n          ))}\n        </Grid>\n      ))}\n    </DialogContent>\n\n    <DialogActions>\n      <Button variant=\"contained\" color=\"primary\" fullWidth onClick={handleClose}>\n        닫기\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\n\nResultModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  lottoNumbers: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)).isRequired,\n  handleClose: PropTypes.func.isRequired,\n};\n\nexport default ResultModal;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AlbumIcon from '@material-ui/icons/Album';\nimport { sampleSize, range } from 'lodash';\nimport ResultModal from './ResultModal';\n\nconst generateLottoNumbers = () => sampleSize(range(1, 46), 6).sort((a, b) => a - b);\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'absolute',\n    margin: 'auto',\n    left: 0,\n    right: 0,\n    top: -29,\n  },\n});\n\nconst GenerateButton = () => {\n  const classes = useStyles();\n  const [lottoNumbers, setLottoNumbers] = useState([]);\n  const [open, setOpen] = useState(false);\n\n  const handleClick = () => {\n    const generatedLottoNumbers = [...Array(5)].map(() => generateLottoNumbers());\n    setLottoNumbers(generatedLottoNumbers);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Fab\n        color=\"primary\"\n        className={`${classes.root}`}\n        aria-label=\"Generate\"\n        onClick={handleClick}\n      >\n        <AlbumIcon className=\"animated infinite pulse\" fontSize=\"large\" />\n      </Fab>\n      <ResultModal open={open} lottoNumbers={lottoNumbers} handleClose={handleClose} />\n    </>\n  );\n};\n\nexport default GenerateButton;\n","import React, { useContext } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport { makeStyles } from '@material-ui/styles';\nimport GenerateButton from './GenerateButton';\nimport { PageContext } from '../contexts/PageContext';\n\nconst useStyles = makeStyles({\n  positionFixed: { top: 'auto', bottom: 0 },\n});\n\nconst BottomAppBar = () => {\n  const classes = useStyles();\n  const pageContext = useContext(PageContext);\n\n  return (\n    <AppBar position=\"fixed\" className={classes.positionFixed}>\n      <GenerateButton />\n      <BottomNavigation showLabels>\n        <BottomNavigationAction\n          label=\"장소검색\"\n          icon={<SearchIcon />}\n          onClick={() => pageContext.setPage('SEARCH')}\n        />\n        <BottomNavigationAction disabled />\n        <BottomNavigationAction label=\"이전내역\" icon={<ListAltIcon />} />\n      </BottomNavigation>\n    </AppBar>\n  );\n};\n\nexport default BottomAppBar;\n","import React from 'react';\n\nimport Panorama from '../components/Panorama';\nimport BottomAppBar from '../components/BottomAppBar';\n\nconst Home = () => (\n  <>\n    <Panorama />\n    <BottomAppBar />\n  </>\n);\n\nexport default Home;\n","import axios from 'axios';\n\nconst LocalApi = async ({ query, page = 1 }) => {\n  let local = {\n    documents: [],\n  };\n\n  if (query) {\n    local = await axios({\n      method: 'get',\n      url: 'https://dapi.kakao.com/v2/local/search/keyword.json',\n      params: {\n        query,\n        page,\n      },\n      headers: {\n        Authorization: 'KakaoAK 30d7a71beace9182140fae73eb808b90',\n      },\n    }).then(res => res.data);\n  }\n\n  return local;\n};\n\nexport default LocalApi;\n","import React, { useContext, useState } from 'react';\n\nimport { makeStyles } from '@material-ui/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\nimport SearchIcon from '@material-ui/icons/Search';\nimport {\n  List, ListItemText, ListItem, Typography,\n} from '@material-ui/core';\nimport { PageContext } from '../contexts/PageContext';\nimport LocalApi from '../apis/LocalApi';\n\nconst useStyles = makeStyles({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  recentKeyword: {\n    padding: '50px',\n  },\n});\n\nconst Search = () => {\n  const classes = useStyles();\n  const pageContext = useContext(PageContext);\n\n  const [list, setList] = useState([]);\n\n  const handleChange = async (e) => {\n    const local = await LocalApi({ query: e.target.value });\n    setList(local.documents);\n  };\n\n  return (\n    <>\n      <Paper className={classes.root} square>\n        <IconButton\n          className={classes.iconButton}\n          aria-label=\"Menu\"\n          onClick={() => pageContext.setPage('HOME')}\n        >\n          <KeyboardBackspaceIcon />\n        </IconButton>\n        <InputBase\n          className={classes.input}\n          placeholder=\"장소를 입력해주세요.\"\n          inputProps={{ 'aria-label': '장소를 입력해주세요.' }}\n          onChange={handleChange}\n        />\n        <IconButton className={classes.iconButton} aria-label=\"Search\">\n          <SearchIcon />\n        </IconButton>\n      </Paper>\n\n      {list.length > 0 ? (\n        <List component=\"nav\" aria-label=\"Secondary mailbox folders\">\n          {list.map(item => (\n            <ListItem button onClick={() => pageContext.setPage('HOME')}>\n              <ListItemText primary={item.place_name} />\n            </ListItem>\n          ))}\n        </List>\n      ) : (\n        <Paper className={classes.recentKeyword} elevation={1} square>\n          <Typography variant=\"subtitle1\" align=\"center\">\n            최근 검색어 내역이 없습니다.\n          </Typography>\n          <Typography variant=\"subtitle2\" align=\"center\">\n            설정이 초기화된다면 도움말을 확인해주세요.\n          </Typography>\n        </Paper>\n      )}\n    </>\n  );\n};\n\nexport default Search;\n","import React, { useState } from 'react';\nimport { PageContext } from './contexts/PageContext';\nimport Home from './pages/Home';\nimport Search from './pages/Search';\n\nconst App = () => {\n  const [page, setPage] = useState('HOME');\n\n  return (\n    <PageContext.Provider\n      value={{\n        page,\n        setPage,\n      }}\n    >\n      {page === 'HOME' ? <Home /> : <Search />}\n    </PageContext.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}